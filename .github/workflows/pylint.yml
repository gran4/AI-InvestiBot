name: Pylint

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          echo done installations
        # which pylint
      - name: Analysing the code with pylint
        run: |
          git remote set-branches --add origin main
          git fetch origin
          echo commented pylint for now
          #pylint --rcfile=.pylintrc $(git ls-files '*.py')
          #$(git diff --name-only HEAD ${{ github.base_ref }})
      - name: Copy SECRETCONFIG from github to a file...
        run: |
          python -c "import os; file = open('secrets.config', 'w'); file.write(os.environ['YOUR_SECRET']); file.close()"
        shell: bash
        env:
          YOUR_SECRET : ${{ secrets.SECRETCONFIG }}
      - name: now running tests for code base
        run: |
          echo running the test
          python AI-InvestiBot/implementation.py
          echo test completed!!!
       # Add a step to explicitly mark the job as successful when it times out
      - name: Mark job as successful (on timeout)
        id: mark-success
        run: echo "::set-output name=success::true"
        continue-on-error: true
